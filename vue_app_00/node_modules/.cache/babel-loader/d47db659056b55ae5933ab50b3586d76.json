{"remainingRequest":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\src\\components\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\src\\components\\xz\\Login.vue","mtime":1564727248000},{"path":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      unameholder: \"请输入用户名\",\n      //用户名提示\n      upwdholder: \"请输入密码\",\n      //密码提示\n      uname: \"\",\n      //用户输入用户名\n      upwd: \"\" //用户输入密码\n\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      //功能:完成用户登录操作 16:30\n      //*1:获取用户输入用户名\n      var u = this.uname; //*2:获取用户输入密码\n\n      var p = this.upwd; //console.log(u+\"_\"+p);\n      //*3:创建正则表达式验证用户名和密码\n      //  3~12 字母数字\n\n      var reg = /^[a-z0-9]{3,12}$/i; //*4:用户验证失败 提示短消息\n\n      if (!reg.test(u)) {\n        this.$toast(\"用户名格式不正确\");\n        return; //失败停止执行\n      } //*5:密码验证失败 提示短消息\n\n\n      if (!reg.test(p)) {\n        this.$toast(\"密码格式不正确\");\n        return; //失败停止执行\n      } //6:发送ajax 请求 axios\n\n\n      var url = \"login\";\n      var obj = {\n        uname: u,\n        upwd: p\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        //7:获取服务器返回结果\n        //7.1:登录失败  提示\n        if (res.data.code == -1) {\n          _this.$toast(\"用户名和密码有误\");\n        } else {\n          //7.2:登录成功  跳转商品首页组件\n          _this.$router.push(\"/Product\");\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,mBAAA,QADA;AACA;AACA,kBAAA,OAFA;AAEA;AACA,aAAA,EAHA;AAGA;AACA,YAAA,EAJA,CAIA;;AAJA,KAAA;AAMA,GARA;AASA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA;AACA,UAAA,IAAA,KAAA,KAAA,CAHA,CAIA;;AACA,UAAA,IAAA,KAAA,IAAA,CALA,CAMA;AACA;AACA;;AACA,UAAA,MAAA,mBAAA,CATA,CAUA;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,UAAA;AACA,eAFA,CAEA;AACA,OAdA,CAeA;;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA;AACA,eAFA,CAEA;AACA,OAnBA,CAoBA;;;AACA,UAAA,MAAA,OAAA;AACA,UAAA,MAAA;AAAA,eAAA,CAAA;AAAA,cAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA,YAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,gBAAA,MAAA,CAAA,UAAA;AACA,SAFA,MAEA;AACA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA,OATA;AAUA;AAlCA;AATA,CAAA","sourcesContent":["<template>\r\n  <div class=\"app-login\">\r\n    <!--h1>Login.vue</h1-->\r\n    <!--1：用户名输入框-->\r\n    <mt-field :placeholder=\"unameholder\" v-model=\"uname\"></mt-field>\r\n    <!--2: 密码输入框-->\r\n    <mt-field :placeholder=\"upwdholder\" v-model=\"upwd\" type=\"password\"></mt-field>\r\n    <!--3: 登陆按钮-->\r\n    <mt-button size=\"large\" @click=\"login\">登录</mt-button>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n      return {\r\n       unameholder:\"请输入用户名\",//用户名提示\r\n       upwdholder:\"请输入密码\",//密码提示\r\n       uname:\"\", //用户输入用户名\r\n       upwd:\"\"   //用户输入密码\r\n      }\r\n    },\r\n    methods:{\r\n      login(){\r\n        //功能:完成用户登录操作 16:30\r\n        //*1:获取用户输入用户名\r\n        var u = this.uname;\r\n        //*2:获取用户输入密码\r\n        var p = this.upwd;\r\n        //console.log(u+\"_\"+p);\r\n        //*3:创建正则表达式验证用户名和密码\r\n        //  3~12 字母数字\r\n        var reg = /^[a-z0-9]{3,12}$/i;\r\n        //*4:用户验证失败 提示短消息\r\n        if(!reg.test(u)){\r\n           this.$toast(\"用户名格式不正确\");\r\n           return;//失败停止执行\r\n        }\r\n        //*5:密码验证失败 提示短消息\r\n        if(!reg.test(p)){\r\n          this.$toast(\"密码格式不正确\");\r\n          return;//失败停止执行\r\n        }  \r\n        //6:发送ajax 请求 axios\r\n        var url = \"login\";\r\n        var obj = {uname:u,upwd:p}\r\n        this.axios.get(url,{params:obj}).then(res=>{ \r\n       //7:获取服务器返回结果\r\n       //7.1:登录失败  提示\r\n      if(res.data.code==-1){\r\n       this.$toast(\"用户名和密码有误\");\r\n      }else{\r\n       //7.2:登录成功  跳转商品首页组件\r\n       this.$router.push(\"/Product\")\r\n      }\r\n      })\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n"],"sourceRoot":"src\\components\\xz"}]}