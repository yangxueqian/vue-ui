{"remainingRequest":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\src\\components\\xz\\Product.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\src\\components\\xz\\Product.vue","mtime":1564735228000},{"path":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\yyy\\Desktop\\teacher‘s_vue_ui-project\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //商品列表数组\n      pno: 0 //页码(第几页)\n\n    };\n  },\n  methods: {\n    jumpCart: function jumpCart() {\n      //查看购物车操作\n      //跳转购物车组件\n      this.$router.push(\"/Cart\");\n    },\n    addCart: function addCart(e) {\n      var _this = this;\n\n      //功能:将商品添加至购物车\n      //1:获取添加购物车参数\n      //lid   当前商品编号\n      //lname 当前商品名称\n      //price 当前商品价格\n      var lid = e.target.dataset.lid;\n      var n = e.target.dataset.lname;\n      var p = e.target.dataset.price; //2:发送ajax请求\n      //2.1:请求服务器地址\n\n      var url = \"addcart\"; //2.2:请求参数\n\n      var obj = {\n        lid: lid,\n        lname: n,\n        price: p\n      }; //3:获取返回的结果\n\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        //3.1:如果-1提示用户登录\n        if (res.data.code == -1) {\n          _this.$toast(\"请先登录\");\n        } else {\n          _this.$toast(\"添加成功\");\n        } //3.2:如果1提示用户添加成功\n\n      });\n    },\n    loadMore: function loadMore() {\n      var _this2 = this;\n\n      //功能:获取商品分页数据\n      //1:发送请求\n      var url = \"product\"; //当前页码加1\n\n      this.pno++; //创建参数对象\n\n      var obj = {\n        pno: this.pno\n      }; //发送ajax请求获取当前页内容\n\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        //2:获取服务器返回结果\n        //3:将返回结果保存\n        //var rows = 1页.concat(3页);\n        //this.list = res.data.data;\n        //4:拼接多页内容\n        var rows = _this2.list.concat(res.data.data); //5:将结果赋值list \n\n\n        _this2.list = rows;\n      });\n    }\n  },\n  created: function created() {\n    this.loadMore(); //console.log(\"1:created 组件创建成功\")\n  }\n};",{"version":3,"sources":["Product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,EADA;AACA;AACA,WAAA,CAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,YADA,sBACA;AACA;AACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KALA;AAMA,WANA,mBAMA,CANA,EAMA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,MAAA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA;AACA,UAAA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA,KAAA;AACA,UAAA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CARA,CASA;AACA;;AACA,UAAA,MAAA,SAAA,CAXA,CAYA;;AACA,UAAA,MAAA;AAAA,aAAA,GAAA;AAAA,eAAA,CAAA;AAAA,eAAA;AAAA,OAAA,CAbA,CAcA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA,YAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,gBAAA,MAAA,CAAA,MAAA;AACA,SAFA,MAEA;AACA,gBAAA,MAAA,CAAA,MAAA;AACA,SANA,CAOA;;AACA,OARA;AASA,KA9BA;AA+BA,YA/BA,sBA+BA;AAAA;;AACA;AACA;AACA,UAAA,MAAA,SAAA,CAHA,CAIA;;AACA,WAAA,GAAA,GALA,CAMA;;AACA,UAAA,MAAA;AAAA,aAAA,KAAA;AAAA,OAAA,CAPA,CAQA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA;AACA;AACA;AACA,YAAA,OAAA,OAAA,IAAA,CAAA,MAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,CANA,CAOA;;;AACA,eAAA,IAAA,GAAA,IAAA;AAEA,OAVA;AAWA;AAnDA,GAPA;AA4DA,SA5DA,qBA4DA;AACA,SAAA,QAAA,GADA,CAEA;AACA;AA/DA,CAAA","sourcesContent":["<template>\r\n  <div class=\"product-app\">\r\n     <!--Product.vue-->\r\n     <!--一个商品 循环-->\r\n     <div class=\"goods-item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n        <img :src=\"'http://127.0.0.1:3000/'+item.img_url\" />\r\n        <h4>{{item.lname}}</h4>\r\n        <div class=\"info\">\r\n             {{item.price}}\r\n        </div>\r\n        <mt-button\r\n        @click=\"addCart\"\r\n        :data-lid=\"item.lid\"\r\n        :data-price=\"item.price\"\r\n        :data-lname=\"item.lname\">\r\n          加入购物车\r\n        </mt-button>\r\n     </div>\r\n     <!--加载更多按钮-->\r\n     <!--为按钮添加点击事件:完成加载更多-->\r\n     <mt-button @click=\"jumpCart\">查看购物车</mt-button>\r\n     <mt-button type=\"primary\" size=\"large\" @click=\"loadMore\">加载更多</mt-button>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n      list:[], //商品列表数组\r\n      pno:0    //页码(第几页)\r\n    }\r\n  },\r\n  methods:{\r\n    jumpCart(){\r\n      //查看购物车操作\r\n      //跳转购物车组件\r\n      this.$router.push(\"/Cart\")\r\n    },\r\n    addCart(e){\r\n     //功能:将商品添加至购物车\r\n     //1:获取添加购物车参数\r\n     //lid   当前商品编号\r\n     //lname 当前商品名称\r\n     //price 当前商品价格\r\n     var lid = e.target.dataset.lid;\r\n     var n = e.target.dataset.lname;\r\n     var p = e.target.dataset.price;\r\n     //2:发送ajax请求\r\n     //2.1:请求服务器地址\r\n     var url = \"addcart\";\r\n     //2.2:请求参数\r\n     var obj = {lid:lid,lname:n,price:p};\r\n     //3:获取返回的结果\r\n     this.axios.get(url,{params:obj}).then(res=>{\r\n       //3.1:如果-1提示用户登录\r\n       if(res.data.code == -1){\r\n         this.$toast(\"请先登录\");\r\n       }else{\r\n         this.$toast(\"添加成功\");\r\n       }\r\n       //3.2:如果1提示用户添加成功\r\n     })\r\n    },\r\n     loadMore(){\r\n       //功能:获取商品分页数据\r\n       //1:发送请求\r\n       var url = \"product\";\r\n       //当前页码加1\r\n       this.pno++;\r\n       //创建参数对象\r\n       var obj = {pno:this.pno};\r\n       //发送ajax请求获取当前页内容\r\n       this.axios.get(url,{params:obj}).then(res=>{\r\n        //2:获取服务器返回结果\r\n        //3:将返回结果保存\r\n        //var rows = 1页.concat(3页);\r\n        //this.list = res.data.data;\r\n        //4:拼接多页内容\r\n         var rows = this.list.concat(res.data.data);\r\n        //5:将结果赋值list \r\n         this.list = rows; \r\n\r\n       })\r\n     }\r\n  },\r\n  created() {\r\n     this.loadMore(); \r\n  //console.log(\"1:created 组件创建成功\")\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n/*1:最外层样式*/\r\n.product-app{\r\n display: flex;/*指定当前元素弹性布局*/\r\n flex-wrap: wrap;/*指定子元素换行*/\r\n /*指定子元素两端对齐*/\r\n justify-content:space-between;\r\n padding:4px;/*最外加内边距*/\r\n}\r\n/*2:修饰商品样式*/\r\n.goods-item{\r\n  width:49%;/*指定商品元素宽度*/\r\n  /*商品外灰色边框*/\r\n  border:1px solid #ccc;\r\n  border-radius: 5px;/*指元素圆角*/\r\n  margin:2px 0;/*外边距*/\r\n  padding:2px; /*内边距*/\r\n  box-sizing: border-box;/*重新计算宽度*/\r\n  display: flex;/*弹性布局*/\r\n  flex-direction: column;/*指定子元素排列方式*/\r\n  min-height: 247px;/*最小高度*/\r\n}\r\n/*4:修饰商品中图片样式*/\r\n.goods-item img{\r\n  width:100%;\r\n}\r\n</style>"],"sourceRoot":"src\\components\\xz"}]}