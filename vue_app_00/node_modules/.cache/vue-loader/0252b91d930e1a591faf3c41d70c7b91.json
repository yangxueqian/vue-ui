{"remainingRequest":"C:\\Users\\yyy\\Desktop\\vue_ui\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yyy\\Desktop\\vue_ui\\vue_app_00\\src\\components\\xz\\Cart.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"C:\\Users\\yyy\\Desktop\\vue_ui\\vue_app_00\\src\\components\\xz\\Cart.vue","mtime":1568618223894},{"path":"C:\\Users\\yyy\\Desktop\\vue_ui\\vue_app_00\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\yyy\\Desktop\\vue_ui\\vue_app_00\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907988000},{"path":"C:\\Users\\yyy\\Desktop\\vue_ui\\vue_app_00\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yyy\\Desktop\\vue_ui\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\yyy\\Desktop\\vue_ui\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.cart_item{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid #ccc;\n    margin-top: 25px;\n}\n.cart_item .leftImgText{\n    display: flex;\n    align-items: center;\n}\n.cart_item .leftImgText img{\n    width: 50px;\n    height: 50px;\n}\n.cart_item .leftImgText .price{\n    color:red;\n    margin-left: 25px;\n}\n",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cart.vue","sourceRoot":"src\\components\\xz","sourcesContent":["<template>\r\n    <div class=\"cart\">\r\n        <!-- 1:顶部按钮：全选 -->\r\n        <div>\r\n            全选<input type=\"checkbox\" @change=\"selectAll\"/>\r\n        </div>\r\n        <!-- 2：购物车商品信息 -->\r\n        <div class=\"cart_item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n            <div class=\"leftImgText\">\r\n                <input type=\"checkbox\" v-model=\"item.cb\">\r\n                <img :src=\"'http://127.0.0.1:3000/'+item.img_url\" alt=\"\">\r\n                <div class=\"lname\">\r\n                    {{item.lname}}\r\n                </div>\r\n                <div class=\"price\">{{item.price}}</div>\r\n            </div>\r\n            <mt-button @click=\"delItem\" :data-id=\"item.id\">删除</mt-button>\r\n        </div>\r\n        <!-- 3：商品小计 -->\r\n        <div>\r\n            购物车商品数量 <span style=\"color:red\">{{$store.getters.getCartCount}} </span>\r\n            <mt-button @click=\"delMitem\">删除选中商品</mt-button>\r\n            小计：<span></span>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default{\r\n        data(){\r\n            return{\r\n                list:[]\r\n            }\r\n        },\r\n        methods:{\r\n            selectAll(e){\r\n                // 1:获取全选按钮状态\r\n                var cb = e.target.checked;\r\n                // console.log(cb);\r\n                // 2：创建循环遍历购物车数组\r\n                for(var item of this.list){\r\n                // 3：将全选状态赋值购物车商品选中状态\r\n                    // item.cb 商品状态=cb全选按钮状态\r\n                    item.cb = cb;\r\n                }\r\n            },\r\n            delMitem(){\r\n                // 1:创建变量保存多个购物车中id值\r\n                var str = \"\";\r\n                // 2：创建循环遍历数组获取状态为true的id值\r\n                for(var item of this.list){\r\n                    if(item.cb){\r\n                        str += item.id+\",\"\r\n                    }\r\n                }\r\n                // 3：截取字符串中最后的逗号\r\n                str = str.substring(0,str.length-1);\r\n                //console.log(str)   1,2,3\r\n                // 4：显示交互提示框，再次请用户确认操作\r\n                this.$messagebox.confirm(\"是否删除数据 ？\")\r\n                .then(res=>{\r\n                    //用户选择确认按钮\r\n                    var url = \"delM\";\r\n                    var ids = {ids:str};//参数名字ids:值拼接字符串\r\n                    this.axios.get(url,{params:ids}).then(res=>{\r\n                        this.loadMore();//删除多个商品后，加载新的购物车列表\r\n                        this.$toast(\"删除成功\") \r\n                    })\r\n                })\r\n                .catch(err=>{\r\n                    console.log(err);\r\n                })\r\n                // 5：发送ajax请求删除多个数据\r\n                // 6：提示用户删除成功\r\n                //7:重新加载购物车中数据\r\n            },\r\n            loadMore(){\r\n                var url = \"cart\";\r\n                this.axios.get(url).then(res=>{\r\n                    //console.log(res);\r\n                    //交互：如果用户未登录就想查看购物车，提示请先登录并跳转登录页面\r\n                    if(res.data.code == -1){\r\n                        this.$messagebox(\"消息\",\"请登录\").then(res=>{\r\n                            this.$router.push(\"/Login\");\r\n                            return;\r\n                        });\r\n                    }else{\r\n                        var list = res.data.data;\r\n                        //console.log(list);\r\n                        //为了实现购物车多选删除在此创建循环遍历数组并且为每个元素添加cb属性表示，商品前复选框状态\r\n                        //注意先添加cb属性再赋值list  顺序很重要\r\n                        //刷新购物车商品数量时为防止重复清点，应先清空后再加载 \r\n                        this.$store.commit(\"clearItem\");\r\n                        for(var item of list){\r\n                            item.cb = false;\r\n                            this.$store.commit(\"addItem\")//修改共享购物车中的数值Vuex\r\n                        }\r\n                        this.list=list;\r\n                    }\r\n\r\n                })\r\n            },\r\n            delItem(e){\r\n                var id = e.target.dataset.id;\r\n                // console.log(id);\r\n                this.$messagebox.confirm(\"是否删除指定商品\")\r\n                .then(res=>{\r\n                    //同意\r\n                    //发送ajax服务器\r\n                    var url =\"del\";\r\n                    var  obj = {id:id};\r\n                    this.axios.get(url,{params:obj}).then(res=>{\r\n                        if(res.data.code > 0){\r\n                            this.$toast(\"删除成功\");\r\n                            this.loadMore();\r\n                        }\r\n                    })\r\n                })\r\n                .catch(err=>{console.log(456)})\r\n            }\r\n            \r\n        },\r\n        created(){\r\n            this.loadMore();\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n    .cart_item{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        border-bottom: 1px solid #ccc;\r\n        margin-top: 25px;\r\n    }\r\n    .cart_item .leftImgText{\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .cart_item .leftImgText img{\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n    .cart_item .leftImgText .price{\r\n        color:red;\r\n        margin-left: 25px;\r\n    }\r\n</style>"]}]}